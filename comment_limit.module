<?php

/**
 * @file
 * Contains comment_limit.module..
 */

use Drupal\comment\CommentForm;
use Drupal\comment\Entity\Comment;
use Drupal\Core\Database\Database;
use Drupal\Core\Entity\Entity;
use Drupal\Core\Entity\Query\Sql\Query;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\field\Entity\FieldConfig;
use Symfony\Component\Validator\Constraints\Count;

/**
 * Implements hook_help().
 */
function comment_limit_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the comment_limit module.
    case 'help.page.comment_limit':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Limits comments per node type') . '</p>';
      return $output;

    default:
  }
}



/**
 * Implements hook_form_FORM_ID_alter().
 */
function comment_limit_form_field_config_edit_form_alter(&$form, FormStateInterface $form_state) {
  /** @var CommentForm $comment */
  $comment = $form_state->getFormObject()->getEntity();
  $form['edit-limit-per-user'] = [
    '#type' => 'number',
    '#title' => 'Comment limit per user',
    '#weight' => 1,
    '#min' => '0',
    '#max' => '1000',
    '#default_value' => $comment->getThirdPartySetting('comment_limit', 'edit-limit-per-user', FALSE),
  ];
  $form['#entity_builders'][] = 'comment_limit_form_field_edit_form_add_form_builder';
}

/**
 *
 */
function comment_limit_form_field_edit_form_add_form_builder($entity_type, FieldConfig $comment , &$form, FormStateInterface $form_state) {
  $comment->setThirdPartySetting('comment_limit', 'edit-limit-per-user', $form_state->getValue('edit-limit-per-user'));
}

/**
 * Implements hook_comment_insert
 */
function comment_limit_comment_insert(Comment $comment) {
  $user = Drupal::currentUser();
  $entity_type = $comment->getCommentedEntityTypeId();
  $entity_id = $comment->getCommentedEntityId();
  $node = \Drupal\node\Entity\Node::load($comment->getCommentedEntityId());
  $bundle = $node->getType();
  $comment_type = FieldConfig::load($entity_type . '.' . $bundle . '.comment');
  $maxCommment = $comment_type->getThirdPartySetting('comment_limit', 'edit-limit-per-user', FALSE);
  $currentComment = comment_limit_get($entity_id);
  If ($maxCommment <= $currentComment && !$user->hasPermission('bypass comment limit')) {
    $comment->delete();
    drupal_set_message(t('You have commented @maxcomment times, please edit or delete some of your older comments', ['@maxcomment' => $maxCommment]));
  }
}

/**
 * Get comment limit for this node type
 */
function comment_limit_get($entity_id) {
  $user = Drupal::currentUser();
  $uid = $user->id();
  // Count comment of user
  $db = \Drupal::database();
  $query = $db->select('comment_field_data', 'c')
  ->fields('c', ['entity_id', 'uid'])
  ->condition('uid', $uid)
  ->condition('entity_id' ,$entity_id)
  ->execute();
  $query->allowRowCount = TRUE;
  return $query->rowCount();

}






